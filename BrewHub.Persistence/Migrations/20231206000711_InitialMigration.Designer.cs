// <auto-generated />
using BrewHub.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BrewHub.Persistence.Migrations
{
    [DbContext(typeof(BeerHubDbContext))]
    [Migration("20231206000711_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BrewHub.Domain.Entities.Beer", b =>
                {
                    b.Property<int>("BeerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BeerId"), 1L, 1);

                    b.Property<int>("BreweryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BeerId");

                    b.HasIndex("BreweryId");

                    b.ToTable("Beers");

                    b.HasData(
                        new
                        {
                            BeerId = 1,
                            BreweryId = 1,
                            Name = "Chimay Blue",
                            Price = 10.0m,
                            Type = "Trappist Ale"
                        },
                        new
                        {
                            BeerId = 2,
                            BreweryId = 1,
                            Name = "Chimay Red",
                            Price = 8.0m,
                            Type = "Dubbel"
                        },
                        new
                        {
                            BeerId = 3,
                            BreweryId = 2,
                            Name = "Westmalle Tripel",
                            Price = 9.0m,
                            Type = "Tripel"
                        },
                        new
                        {
                            BeerId = 4,
                            BreweryId = 3,
                            Name = "Rochefort 10",
                            Price = 12.0m,
                            Type = "Quadrupel"
                        },
                        new
                        {
                            BeerId = 5,
                            BreweryId = 4,
                            Name = "Duvel",
                            Price = 11.0m,
                            Type = "Strong Pale Ale"
                        },
                        new
                        {
                            BeerId = 6,
                            BreweryId = 5,
                            Name = "La Chouffe",
                            Price = 10.5m,
                            Type = "Belgian Strong Ale"
                        },
                        new
                        {
                            BeerId = 7,
                            BreweryId = 6,
                            Name = "St. Bernardus Abt 12",
                            Price = 11.5m,
                            Type = "Quadrupel"
                        },
                        new
                        {
                            BeerId = 8,
                            BreweryId = 7,
                            Name = "Brusseleir",
                            Price = 9.5m,
                            Type = "Belgian Pale Ale"
                        });
                });

            modelBuilder.Entity("BrewHub.Domain.Entities.Brewery", b =>
                {
                    b.Property<int>("BreweryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BreweryId"), 1L, 1);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BreweryId");

                    b.ToTable("Breweries");

                    b.HasData(
                        new
                        {
                            BreweryId = 1,
                            Location = "Chimay, Belgium",
                            Name = "Chimay Brewery"
                        },
                        new
                        {
                            BreweryId = 2,
                            Location = "Westmalle, Belgium",
                            Name = "Westmalle Brewery"
                        },
                        new
                        {
                            BreweryId = 3,
                            Location = "Rochefort, Belgium",
                            Name = "Rochefort Brewery"
                        },
                        new
                        {
                            BreweryId = 4,
                            Location = "Puurs, Belgium",
                            Name = "Duvel Moortgat Brewery"
                        },
                        new
                        {
                            BreweryId = 5,
                            Location = "Achouffe, Belgium",
                            Name = "Achouffe Brewery"
                        },
                        new
                        {
                            BreweryId = 6,
                            Location = "Watou, Belgium",
                            Name = "St. Bernardus Brewery"
                        },
                        new
                        {
                            BreweryId = 7,
                            Location = "Brussels, Belgium",
                            Name = "Brasserie de la Senne"
                        });
                });

            modelBuilder.Entity("BrewHub.Domain.Entities.Quote", b =>
                {
                    b.Property<int>("QuoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuoteId"), 1L, 1);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WholesalerId")
                        .HasColumnType("int");

                    b.HasKey("QuoteId");

                    b.HasIndex("WholesalerId");

                    b.ToTable("Quotes");

                    b.HasData(
                        new
                        {
                            QuoteId = 1,
                            ClientId = "Client1",
                            Summary = "Quote summary 1",
                            TotalPrice = 200.0m,
                            WholesalerId = 1
                        },
                        new
                        {
                            QuoteId = 2,
                            ClientId = "Client2",
                            Summary = "Quote summary 2",
                            TotalPrice = 150.0m,
                            WholesalerId = 2
                        },
                        new
                        {
                            QuoteId = 3,
                            ClientId = "Client3",
                            Summary = "Quote summary 3",
                            TotalPrice = 180.0m,
                            WholesalerId = 3
                        });
                });

            modelBuilder.Entity("BrewHub.Domain.Entities.QuoteDetail", b =>
                {
                    b.Property<int>("QuoteDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuoteDetailId"), 1L, 1);

                    b.Property<int>("BeerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("QuoteId")
                        .HasColumnType("int");

                    b.HasKey("QuoteDetailId");

                    b.HasIndex("BeerId");

                    b.HasIndex("QuoteId");

                    b.ToTable("QuoteDetails");

                    b.HasData(
                        new
                        {
                            QuoteDetailId = 1,
                            BeerId = 1,
                            Discount = 0.0m,
                            Quantity = 10,
                            QuoteId = 1
                        },
                        new
                        {
                            QuoteDetailId = 2,
                            BeerId = 2,
                            Discount = 5.0m,
                            Quantity = 15,
                            QuoteId = 1
                        },
                        new
                        {
                            QuoteDetailId = 3,
                            BeerId = 3,
                            Discount = 10.0m,
                            Quantity = 20,
                            QuoteId = 2
                        },
                        new
                        {
                            QuoteDetailId = 4,
                            BeerId = 4,
                            Discount = 2.0m,
                            Quantity = 8,
                            QuoteId = 3
                        },
                        new
                        {
                            QuoteDetailId = 5,
                            BeerId = 5,
                            Discount = 4.0m,
                            Quantity = 12,
                            QuoteId = 3
                        });
                });

            modelBuilder.Entity("BrewHub.Domain.Entities.Wholesaler", b =>
                {
                    b.Property<int>("WholesalerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WholesalerId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("WholesalerId");

                    b.ToTable("Wholesalers");

                    b.HasData(
                        new
                        {
                            WholesalerId = 1,
                            Name = "Belgian Beer Distributors",
                            Stock = 100
                        },
                        new
                        {
                            WholesalerId = 2,
                            Name = "Brewery Warehouse",
                            Stock = 150
                        },
                        new
                        {
                            WholesalerId = 3,
                            Name = "Global Beverages",
                            Stock = 120
                        },
                        new
                        {
                            WholesalerId = 4,
                            Name = "Hop Haven",
                            Stock = 80
                        },
                        new
                        {
                            WholesalerId = 5,
                            Name = "Bier Bazaar",
                            Stock = 200
                        },
                        new
                        {
                            WholesalerId = 6,
                            Name = "Beer Paradise",
                            Stock = 170
                        },
                        new
                        {
                            WholesalerId = 7,
                            Name = "Eurobrew Imports",
                            Stock = 130
                        });
                });

            modelBuilder.Entity("BrewHub.Domain.Entities.WholesalerBeer", b =>
                {
                    b.Property<int>("WholesalerId")
                        .HasColumnType("int");

                    b.Property<int>("BeerId")
                        .HasColumnType("int");

                    b.Property<int>("RemainingQuantity")
                        .HasColumnType("int");

                    b.HasKey("WholesalerId", "BeerId");

                    b.HasIndex("BeerId");

                    b.ToTable("WholesalerBeers");

                    b.HasData(
                        new
                        {
                            WholesalerId = 1,
                            BeerId = 1,
                            RemainingQuantity = 50
                        },
                        new
                        {
                            WholesalerId = 1,
                            BeerId = 2,
                            RemainingQuantity = 75
                        },
                        new
                        {
                            WholesalerId = 2,
                            BeerId = 3,
                            RemainingQuantity = 100
                        },
                        new
                        {
                            WholesalerId = 3,
                            BeerId = 4,
                            RemainingQuantity = 60
                        },
                        new
                        {
                            WholesalerId = 3,
                            BeerId = 5,
                            RemainingQuantity = 90
                        },
                        new
                        {
                            WholesalerId = 4,
                            BeerId = 6,
                            RemainingQuantity = 110
                        },
                        new
                        {
                            WholesalerId = 5,
                            BeerId = 7,
                            RemainingQuantity = 80
                        },
                        new
                        {
                            WholesalerId = 6,
                            BeerId = 8,
                            RemainingQuantity = 120
                        });
                });

            modelBuilder.Entity("BrewHub.Domain.Entities.Beer", b =>
                {
                    b.HasOne("BrewHub.Domain.Entities.Brewery", "Brewery")
                        .WithMany("Beers")
                        .HasForeignKey("BreweryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brewery");
                });

            modelBuilder.Entity("BrewHub.Domain.Entities.Quote", b =>
                {
                    b.HasOne("BrewHub.Domain.Entities.Wholesaler", "Wholesaler")
                        .WithMany("Quotes")
                        .HasForeignKey("WholesalerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wholesaler");
                });

            modelBuilder.Entity("BrewHub.Domain.Entities.QuoteDetail", b =>
                {
                    b.HasOne("BrewHub.Domain.Entities.Beer", "Beer")
                        .WithMany()
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BrewHub.Domain.Entities.Quote", "Quote")
                        .WithMany("QuoteDetails")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beer");

                    b.Navigation("Quote");
                });

            modelBuilder.Entity("BrewHub.Domain.Entities.WholesalerBeer", b =>
                {
                    b.HasOne("BrewHub.Domain.Entities.Beer", "Beer")
                        .WithMany("WholesalerBeers")
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrewHub.Domain.Entities.Wholesaler", "Wholesaler")
                        .WithMany("WholesalerBeers")
                        .HasForeignKey("WholesalerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beer");

                    b.Navigation("Wholesaler");
                });

            modelBuilder.Entity("BrewHub.Domain.Entities.Beer", b =>
                {
                    b.Navigation("WholesalerBeers");
                });

            modelBuilder.Entity("BrewHub.Domain.Entities.Brewery", b =>
                {
                    b.Navigation("Beers");
                });

            modelBuilder.Entity("BrewHub.Domain.Entities.Quote", b =>
                {
                    b.Navigation("QuoteDetails");
                });

            modelBuilder.Entity("BrewHub.Domain.Entities.Wholesaler", b =>
                {
                    b.Navigation("Quotes");

                    b.Navigation("WholesalerBeers");
                });
#pragma warning restore 612, 618
        }
    }
}
